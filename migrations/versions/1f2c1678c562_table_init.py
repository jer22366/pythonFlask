"""table_init

Revision ID: 1f2c1678c562
Revises: 
Create Date: 2025-09-05 09:05:06.089859

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '1f2c1678c562'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'company_info',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('name', sa.String(length=255), nullable=False),
        sa.Column('short_name', sa.String(length=100), nullable=True),
        sa.Column('tax_id', sa.String(length=50), nullable=True),
        sa.Column('logo_url', sa.String(length=255), nullable=True),
        sa.Column('address', sa.String(length=255), nullable=True),
        sa.Column('phone', sa.String(length=50), nullable=True),
        sa.Column('email', sa.String(length=100), nullable=True),
        sa.Column('website', sa.String(length=255), nullable=True),
        sa.Column('founded_date', sa.Date(), nullable=True),
        sa.Column('industry', sa.String(length=100), nullable=True),
        sa.Column('size', sa.String(length=50), nullable=True),
        sa.Column('timezone', sa.String(length=50), nullable=True),
        sa.Column('language', sa.String(length=50), nullable=True),
        sa.Column('created_at', sa.DateTime(), server_default=sa.func.now(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.func.now(), onupdate=sa.func.now(), nullable=False),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_table(
        'leave_types',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('name', sa.String(length=50), nullable=False),
        sa.Column('is_paid', sa.Boolean(), nullable=True),
        sa.Column('annual_quota', sa.Float(), nullable=True),
        sa.Column('description', sa.String(length=200), nullable=True),
        sa.Column('created_at', sa.DateTime(), server_default=sa.func.now(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.func.now(), onupdate=sa.func.now(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name')
    )
    op.create_table('report_templates',
        sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column('code', sa.String(length=100), nullable=False),
        sa.Column('name', sa.String(length=200), nullable=False),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('query_engine', sa.Enum('sql', 'orm', 'python', name='report_query_engine'), nullable=False),
        sa.Column('sql_text', sa.Text(), nullable=True),
        sa.Column('handler_name', sa.String(length=200), nullable=True),
        sa.Column('default_params', sa.JSON(), server_default=sa.text('(JSON_OBJECT())'), nullable=False),
        sa.Column('default_format', sa.Enum('pdf', 'xlsx', 'csv', name='report_format'), nullable=False),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('created_by', sa.BigInteger(), nullable=True),
        sa.Column('updated_by', sa.BigInteger(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('code')
    )
    with op.batch_alter_table('report_templates', schema=None) as batch_op:
        batch_op.create_index('ix_report_templates_active', ['is_active'], unique=False)

    op.create_table(
        'users',
        sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column('username', sa.String(length=50), nullable=False),
        sa.Column('email', sa.String(length=120), nullable=False),
        sa.Column('birthday', sa.Date(), nullable=True),
        sa.Column('address', sa.String(length=200), nullable=True),
        sa.Column('phone', sa.String(length=20), nullable=True),
        sa.Column('password', sa.String(length=255), nullable=False),
        sa.Column('created_at', sa.DateTime(), server_default=sa.func.now(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=True),
        sa.Column('level', sa.Enum('admin', 'staff', 'manager', 'finance', 'HR', name='levelenum'), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('email'),
        sa.UniqueConstraint('username')
    )
    op.create_table(
        'department',
        sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column('name', sa.String(length=100), nullable=False),
        sa.Column('code', sa.String(length=20), nullable=True),
        sa.Column('parent_id', sa.BigInteger(), nullable=True),
        sa.Column('level', sa.Integer(), nullable=True),
        sa.Column('manager_id', sa.BigInteger(), nullable=True),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('created_at', sa.DateTime(), server_default=sa.func.now(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.func.now(), onupdate=sa.func.now(), nullable=False),
        sa.Column('is_active', sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(['manager_id'], ['users.id']),
        sa.ForeignKeyConstraint(['parent_id'], ['department.id']),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('code'),
        sa.UniqueConstraint('name')
    )
    op.create_table(
        'roles',
        sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column('name', sa.String(100), nullable=False),
        sa.Column('code', sa.String(50), nullable=False, unique=True),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('status', sa.Enum('active', 'inactive', name='rolestatusenum'), default='active'),
        sa.Column('created_at', sa.DateTime(), server_default=sa.func.now()),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.func.now(), onupdate=sa.func.now()),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notification_settings',
        sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column('user_id', sa.BigInteger(), nullable=True),
        sa.Column('role_id', sa.BigInteger(), nullable=True),
        sa.Column('event_type', sa.String(length=50), nullable=False),
        sa.Column('channel', sa.Enum('email', 'system', 'push', name='notificationchannelenum'), nullable=False),
        sa.Column('is_enabled', sa.Boolean(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_table('report_fields',
        sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column('template_id', sa.BigInteger(), nullable=False),
        sa.Column('key', sa.String(length=200), nullable=False),
        sa.Column('label', sa.String(length=200), nullable=False),
        sa.Column('dtype', sa.String(length=50), nullable=False),
        sa.Column('visible', sa.Boolean(), nullable=False),
        sa.Column('sort_order', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['template_id'], ['report_templates.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('template_id', 'key', name='uq_report_field_template_key')
    )
    with op.batch_alter_table('report_fields', schema=None) as batch_op:
        batch_op.create_index('ix_report_fields_template_sort', ['template_id', 'sort_order'], unique=False)

    op.create_table('report_schedules',
        sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column('template_id', sa.BigInteger(), nullable=False),
        sa.Column('name', sa.String(length=200), nullable=False),
        sa.Column('frequency', sa.String(length=50), nullable=True),
        sa.Column('day_of_week', sa.String(length=20), nullable=True),
        sa.Column('day_of_month', sa.Integer(), nullable=True),
        sa.Column('time_of_day', sa.String(length=10), nullable=True),
        sa.Column('cron', sa.String(length=120), nullable=True),
        sa.Column('timezone', sa.String(length=50), nullable=False),
        sa.Column('params', sa.JSON(), server_default=sa.text('(JSON_OBJECT())'), nullable=False),
        sa.Column('output_format', sa.Enum('pdf', 'xlsx', 'csv', name='report_format'), nullable=False),
        sa.Column('status', sa.Enum('active', 'paused', 'archived', name='report_schedule_status'), nullable=False),
        sa.Column('last_run_at', sa.DateTime(), nullable=True),
        sa.Column('next_run_at', sa.DateTime(), nullable=True),
        sa.Column('created_by', sa.BigInteger(), nullable=True),
        sa.Column('updated_by', sa.BigInteger(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(['template_id'], ['report_templates.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('report_schedules', schema=None) as batch_op:
        batch_op.create_index('ix_report_schedules_status_next', ['status', 'next_run_at'], unique=False)
        batch_op.create_index('ix_report_schedules_template', ['template_id'], unique=False)

    op.create_table('useractive_logs',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.BigInteger(), nullable=False),
        sa.Column('ip', sa.String(length=45), nullable=False),
        sa.Column('user_agent', sa.String(length=255), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('action', sa.String(length=50), nullable=True),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_table('positions',
        sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column('name', sa.String(length=100), nullable=False),
        sa.Column('code', sa.String(length=50), nullable=True),
        sa.Column('level', sa.Integer(), nullable=True),
        sa.Column('department_id', sa.BigInteger(), nullable=True),
        sa.Column('status', sa.Enum('active', 'inactive', name='statusenum'), nullable=False),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.ForeignKeyConstraint(['department_id'], ['department.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('code')
    )
    op.create_table('report_export_logs',
        sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column('template_id', sa.BigInteger(), nullable=True),
        sa.Column('schedule_id', sa.BigInteger(), nullable=True),
        sa.Column('run_by', sa.BigInteger(), nullable=True),
        sa.Column('params', sa.JSON(), server_default=sa.text('(JSON_OBJECT())'), nullable=False),
        sa.Column('output_format', sa.Enum('pdf', 'xlsx', 'csv', name='report_format'), nullable=False),
        sa.Column('status', sa.Enum('queued', 'running', 'success', 'failed', name='report_job_status'), nullable=False),
        sa.Column('file_path', sa.String(length=500), nullable=True),
        sa.Column('error_message', sa.Text(), nullable=True),
        sa.Column('started_at', sa.DateTime(), nullable=True),
        sa.Column('finished_at', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['schedule_id'], ['report_schedules.id'], ondelete='SET NULL'),
        sa.ForeignKeyConstraint(['template_id'], ['report_templates.id'], ondelete='SET NULL'),
        sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('report_export_logs', schema=None) as batch_op:
        batch_op.create_index('ix_report_logs_status', ['status'], unique=False)
        batch_op.create_index('ix_report_logs_template_started', ['template_id', 'started_at'], unique=False)

    op.create_table('report_recipients',
        sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column('schedule_id', sa.BigInteger(), nullable=False),
        sa.Column('channel', sa.Enum('email', 'in_app', 'webhook', name='report_delivery_channel'), nullable=False),
        sa.Column('email', sa.String(length=200), nullable=True),
        sa.Column('user_id', sa.BigInteger(), nullable=True),
        sa.ForeignKeyConstraint(['schedule_id'], ['report_schedules.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('report_recipients', schema=None) as batch_op:
        batch_op.create_index('ix_report_recipients_schedule', ['schedule_id'], unique=False)
    
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('report_recipients', schema=None) as batch_op:
        batch_op.drop_index('ix_report_recipients_schedule')

    op.drop_table('report_recipients')
    with op.batch_alter_table('report_export_logs', schema=None) as batch_op:
        batch_op.drop_index('ix_report_logs_template_started')
        batch_op.drop_index('ix_report_logs_status')

    op.drop_table('report_export_logs')
    op.drop_table('positions')
    op.drop_table('useractive_logs')
    with op.batch_alter_table('report_schedules', schema=None) as batch_op:
        batch_op.drop_index('ix_report_schedules_template')
        batch_op.drop_index('ix_report_schedules_status_next')

    op.drop_table('report_schedules')
    with op.batch_alter_table('report_fields', schema=None) as batch_op:
        batch_op.drop_index('ix_report_fields_template_sort')

    op.drop_table('report_fields')
    op.drop_table('notification_settings')
    op.drop_table('department')
    op.drop_table('users')
    with op.batch_alter_table('report_templates', schema=None) as batch_op:
        batch_op.drop_index('ix_report_templates_active')

    op.drop_table('report_templates')
    op.drop_table('leave_types')
    op.drop_table('company_info')
    # ### end Alembic commands ###
